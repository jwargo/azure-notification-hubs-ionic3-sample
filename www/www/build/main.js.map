{"version":3,"sources":["../../src/pages/notification-event/notification-event.ts","../../src/pages/registration-event/registration-event.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/interfaces/events.ts","../../src/providers/azure-notification-hubs/azure-notification-hubs.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/app/config.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\nimport { Notification } from '../../interfaces/events';\n\n@IonicPage()\n@Component({\n  selector: 'page-notification-event',\n  templateUrl: 'notification-event.html',\n})\nexport class NotificationEventPage {\n\n  event: any = {};\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams\n  ) {\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad NotificationEventPage');\n    // Pull the event we received from the home page    \n    this.event = this.navParams.get(\"event\");\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/notification-event/notification-event.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\nimport { Registration } from '../../interfaces/events';\n\n@IonicPage()\n@Component({\n  selector: 'page-registration-event',\n  templateUrl: 'registration-event.html',\n})\nexport class RegistrationEventPage {\n\n  // event: Registration;\n  event: any = {};\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams\n  ) {\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad RegistrationEventPage');\n    // Pull the event we received from the home page    \n    this.event = this.navParams.get(\"event\");    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/registration-event/registration-event.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 110;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 110\n// module chunks = 2","var map = {\n\t\"../pages/notification-event/notification-event.module\": [\n\t\t275,\n\t\t1\n\t],\n\t\"../pages/registration-event/registration-event.module\": [\n\t\t276,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 151;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 151\n// module chunks = 2","import { Component } from '@angular/core';\nimport { Events, NavController } from 'ionic-angular';\n\n// Event pages\nimport { RegistrationEventPage } from '../registration-event/registration-event';\nimport { NotificationEventPage } from '..//notification-event/notification-event';\n\n// Interfaces and Providers\nimport { EventType, Registration, Notification } from '../../interfaces/events';\nimport { AzureNotificationHubsProvider } from '../../providers/azure-notification-hubs/azure-notification-hubs';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  private eventList: (Registration | Notification)[] = []\n\n  constructor(\n    public events: Events,\n    public pushService: AzureNotificationHubsProvider,\n    public nav: NavController\n  ) {\n    console.log('HomePage constructor');\n\n    // The provider (AzureNotificationHubs) fires an event whenever it\n    // gets new data\n    this.events.subscribe(\"anh: data-change\", () => {\n      // Update our local copy of the event data when it changes in the provider\n      console.log(\"HomePage: event data change detected\");\n      this.eventList = this.pushService.pushEvents;\n    });\n\n  }\n\n  viewEvent(theEvent: Registration | Notification) {\n    console.log('HomePage: event tapped')\n    // What type of event do we have?\n    if (theEvent.type == EventType.registration) {\n      console.log('HomePage: Opening Registration Event')\n      this.nav.push(RegistrationEventPage, { event: <Registration>theEvent });\n    } else {\n      console.log('HomePage: Opening Notification Event')\n      this.nav.push(NotificationEventPage, { event: <Notification>theEvent });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","// Interface: Events\n\nexport interface Registration {\n    type: EventType;\n    title: string;\n    registrationId: string;\n    azureRegId: string;\n    received: Date;\n}\n\nexport interface Notification {\n    type: EventType;\n    title: string;\n    message: string;\n    count: number;\n    sound: string;\n    image: string;\n    additionalData: any[];\n    received: Date;\n}\n\nexport enum EventType {\n    registration, \n    notification\n}\n\n\n// WEBPACK FOOTER //\n// ./src/interfaces/events.ts","import { AlertController, Events, Platform } from 'ionic-angular';\nimport { Injectable } from '@angular/core';\n\n// use lodash to clone data objects coming from the push service\nimport * as _ from 'lodash';\n\n// Interface(s)\nimport { Registration, Notification, EventType } from '../../interfaces/events';\n// Azure Notification Hubs configuration (in an external file)\nimport { config } from '../../app/config';\n\ndeclare let PushNotification;\n\n@Injectable()\nexport class AzureNotificationHubsProvider {\n\n  // make an empty array of registrations and notifications\n  public pushEvents: (Registration | Notification)[] = [];\n\n  constructor(\n    private alertCtrl: AlertController,\n    private events: Events,\n    private platform: Platform\n  ) {\n    // Wait until the container's initialized before doing anything here\n    this.platform.ready().then(() => {\n      console.log('AzureNotificationHubsProvider: Platform ready');\n\n      // make sure the config values are set in the config.ts file.\n      if (config.hubName && config.hubConnectionString) {\n        // Initialize the Push Service\n        var push = PushNotification.init({\n          // Pass in our configuration values\n          notificationHubPath: config.hubName,\n          connectionString: config.hubConnectionString,\n\n          android: { sound: true },\n          ios: {\n            alert: 'true', badge: true, sound: 'false'\n          }\n        });\n\n        push.on('registration', data => {\n          console.log('Received Registration event');\n          // Copy the event data into a Registration object\n          let registration: Registration = _.clone(data);\n          // Populate the object type\n          registration.type = EventType.registration;\n          // Set the title (registrations won't have one)\n          registration.title = 'Registration';\n          // Set the created date\n          registration.received = new Date(Date.now());\n          // Add the event to the events array        \n          this.saveData(registration);\n          this.events.publish(\"anh: data-change\");\n\n          // Tell the user\n          let alert = this.alertCtrl.create({\n            title: registration.title,\n            message: \"Registration completed successfully\",\n            buttons: ['OK']\n          });\n          alert.present();\n        });\n\n        push.on('notification', data => {\n          console.log('Received Notification event');\n          // Copy the event data into a Notification object\n          let notification: Notification = _.clone(data);\n          // Populate the object type\n          notification.type = EventType.notification;\n          // Set the created date\n          notification.received = new Date(Date.now());\n          // Add the event to the events array \n          this.saveData(notification);\n          this.events.publish(\"anh: data-change\");\n        \n          // Tell the user\n          let alert = this.alertCtrl.create({\n            title: notification.title,\n            message: notification.message,\n            buttons: ['OK']\n          });\n          alert.present();\n        });\n\n      } else {\n        // Tell the user this won't work until they `fix` the config.\n        let alert = this.alertCtrl.create({\n          title: 'Invalid Configuration',\n          message: \"Please populate the project's <strong>src/app/config.ts</strong> file with settings from your Azure Notification Hubs configuration.\",\n          buttons: [\"OK, I'm sorry!\"]\n        });\n        alert.present();\n      }\n\n    });\n  }\n\n  saveData(data: Registration | Notification) {\n    console.log('Saving data to the pushEvents array');\n    this.pushEvents.push(data);\n    console.dir(this.pushEvents);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/azure-notification-hubs/azure-notification-hubs.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\n// Pages \nimport { HomePage } from '../pages/home/home';\nimport { NotificationEventPage} from '../pages/notification-event/notification-event'\nimport { RegistrationEventPage} from '../pages/registration-event/registration-event';\n\n// Providers \nimport { AzureNotificationHubsProvider } from '../providers/azure-notification-hubs/azure-notification-hubs';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    NotificationEventPage,\n    RegistrationEventPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    NotificationEventPage,\n    RegistrationEventPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    AzureNotificationHubsProvider,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","export const config = {\n    hubName: 'JMW-Test',\n    hubConnectionString: 'Endpoint=sb://jmwns01.servicebus.windows.net/;SharedAccessKeyName=DefaultListenSharedAccessSignature;SharedAccessKey=dxJb7C8dScCXoAvlHvUo5yfnHYCEs4DNipwkWjw+m0I='\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/config.ts"],"sourceRoot":""}